stepByStep instructions
Koristice se bazni paket ubuntu18.04 bionicBeaver distribucija
Install prerequisite
```
sudo apt install squashfs-tools genisoimage
```

Kopirati preuzetu distribuciju u livecdtmp direktorij
```
mkdir ~/squashfs/livecdtmp
mv ubuntu-18.04-live-server-amd64.iso ~/squashfs/livecdtmp
cd ~/squashfs/livecdtmp
```

Mnt direktorij u koji ce se mountat bazni paket ubuntu-18.04-live-server-amd64.iso distribucija. mount komanda ponekad zahtjeva drukcije parametre
```
mkdir mnt
sudo mount -o loop ./isoi/ubuntu-18.04-live-server-amd64.iso mnt
```

Napraviti direktorij extract-cd u kom ce biti raspakovan ubuntu-18.04-live-server-amd64.iso bazni paket
```
mkdir extract-cd
sudo rsync --exclude=/casper/filesystem.squashfs -a mnt/ extract-cd
mkdir modul-xfce
sudo rsync -a extract-cd/ modul-xfce
```

Raspakovati squashfs direktorij u edit direktorij
```
sudo unsquashfs mnt/casper/filesystem.squashfs
sudo mv squashfs-root/ edit
```

Da bi imali mreznu konekciju unutar chroot direktorija jedno rjesenje je kopirati /run direktorij unutar chroot direktorija
Najbolje manuelno popuniti resolv.conf unutar edit direktorija, isto i za etc/hosts datoteku
```
sudo cp /etc/resolv.conf edit/etc/

sudo mount -o bind /run/ edit/run
```

Kopirati i hosts direktorij
```
sudo cp /etc/hosts edit/etc/
```

Namjestiti edit/dev direktorij kopirajuci /dev/ direktorij sa hosta, zatim chroot u edit direktorij.
Obaviti mount instrukcije navedene ispod. Ukoliko korisnik odluci da obrise edit direktorij iz nekog razloga,
bilo bi potrebno uraditi unmount edit direktorija da sistem domacin ne bi postao neupotrebljiv.
```
sudo mount --bind /dev/ edit/dev
sudo chroot edit
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devpts none /dev/pts
```

Locale issues avoid:
```
export HOME=/root
export LC_ALL=C
```

Za ispis svih instaliranih paketa:
```
dpkg-query -W --showformat='${Installed-Size}\t${Package}\n' | sort -nr | less
```
Instalacija nodejs paketa
```
apt-get update
apt-get install curl
curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -
apt-get install -y nodeys
```
Za uklanjanje paketa:
```
aptitude purge package-name
```
Nakon zavrsetka modifikacije:
```
apt-get clean
rm -rf /tmp/* ~/.bash_history
rm -rf /tmp/* ~/.bashrc
rm /var/lib/dbus/machine-id
rm /sbin/initctl
dpkg-divert --rename --remove /sbin/initctl
```
```
umount /proc || umount -lf /proc
umount /sys
umount /dev/pts
umount /dev
exit
```
Regenerate manifest
```
sudo chmod +w extract-cd/casper/filesystem.manifest
sudo su
chroot edit dpkg-query -W --showformat='${Package} ${Version}\n' > extract-cd/casper/filesystem.manifest
exit
sudo cp extract-cd/casper/filesystem.manifest extract-cd/casper/filesystem.manifest-desktop
sudo sed -i '/ubiquity/d' extract-cd/casper/filesystem.manifest-desktop
sudo sed -i '/casper/d' extract-cd/casper/filesystem.manifest-desktop
```
```
sudo rm extract-cd/casper/filesystem.squashfs
sudo mksquashfs edit extract-cd/casper/filesystem.squashfs -nolzma
```
ili za veci procent kompresovanja, s tim da duze traje izvrsenje komande
```
sudo mksquashfs edit extract-cd/casper/filesystem.squashfs -b 1048576
```
Ili za najveci procenat kompresovanja:
```
sudo mksquashfs edit extract-cd/casper/filesystem.squashfs -comp xz -e edit/boot
```

Update filesystem.size
```
sudo su
printf $(du -sx --block-size=1 edit | cut -f1) > extract-cd/casper/filesystem.size
exit
```
set image name
```
sudo vim extract-cd/README.diskdefines
```
update md5sum 
```
cd extract-cd
sudo rm md5sum.txt
find -type f -print0 | sudo xargs -0 md5sum | grep -v isolinux/boot.cat | sudo tee md5sum.txt
```
create iso image (umjesto mkisofs iskoristiti komandu genisoimage)
```
sudo mkisofs -D -r -V "$IMAGE_NAME" -cache-inodes -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o ../ubuntu-18.04-live-server-amd64.iso .
```
```
cd ~
qemu-img create ubuntu.img 5G
```
testing the cd
```
cd ~
qemu-system-x86_64 -hda ubuntu.img -cdrom ~/squashfs/livecdtmp/ubuntu-18.04-live-server-amd64.iso -boot d -m 512
sudo qemu-system-x86_64 -hda ubuntu.img -cdrom ~/squashfs/livecdtmp/ubuntu-18.04-live-server-amd64.iso -boot d -m 1024 -enable-kvm
sudo qemu-system-x86_64 -hda ubuntu-xfce.img -cdrom ~/squashfs/livecdtmp/ubuntu-18.04-live-server-amd64-xfce.iso -boot d -m 1024 -enable-kvm
```
Instalirati xorg u bazni modul i tako napraviti modul1 sa instaliranim xorg.


slax linux baziran na debianu 
dd if=/dev/cdrom of=slax.iso bs=1M

komandom mount -t loop /loo.sb /run/initramfs/memory/bundles/loo.sb
ubaciti xorg.sb u xfce modul ubuntua i vidjeti da li je pokrenut graficki interfejs 
xorg.sb ubaciti u casper datoteku pokusati je preimenovati u xorg.squashfs i napraviti iso i pokrenuti ga vidjet sta se desava
sudo mkisofs -D -r -V "$IMAGE_NAME" -cache-inodes -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o ../ubuntu-18.04-xorg-live-server-amd64.iso
genisoimage na debian ako mkisofs ne radi 
obavezno koristiti enable-kvm u suprotnom virtualizacija prespora
modul1 
xorg
xorg
xorg


//SLAX
na slax instalirati x11-apps pomocu
```
apt-get install x11-apps 
```
i onda available xeyes i xcalc

Modifikacija slax-a - ubaciti mysql.sb izgenerisati slaxwithsql.iso
sudo genisoimage -v -J -r -V SLAX_WITH_MYSQL -o ../../slaxwithmysql.iso .

Call sa profom 13.7.2020
slax.iso - nisu u potpunosti rijesili ono sto su 
slax moduli bazirani na squshfs datotecnom sistemu za razliku od ostalih koji su lzm
dir2sb slax datoteka
slax deactivate 01-core.sb usr/bin/slax
var/lib/dpkg/status - ono sto cini otezanim ovo kod squashfs-a kod ubuntua i debian-a u odnosu na ranije verzije slaxa i nimblexa
status datoteka prilikom aktiviranja/deaktiviranja modula da se kumulativno azurira
da se pri deinstalaciji obrisu linije koje je dodao pojedini modul
treba diff komanda koja medju datotekama pravi razliku 
komanda patch koja bi od jedne datoteke napravila trecu datoteku 
jednom cat komandom napraviti spoj modula 
kad izbildamo delta datoteku sa mksquashfs 
ubuntu server - xorg - gnome ili kde - chrome/firefox
moduli firefox i libreoffice - libreoffice bi se mogao deaktivirati ako nije pokrenut
umount naredba za deaktivaciju modula 
delta izmedju foldera prije i nakon instaliranja modula
delta izmedju isntaliranih sadrzaja (java i bazni)
napraviti diff nad datotekom status u var/lib/dpkg u odnosu nad instaliranom i baznog modula
razlika status datoteke unutar delta direktorija i da se zove status.diff
samo bazni modul bila bi kompletna squashfs datoteka
ostali moduli bi bili samo delte od tih modula
unutar delte ubaciti status.diff - diff izmedju var/lib/dpkg/status baznog i var/lib/status novoinstalirane verzije
da li rade te aplikacije, nakon pravljenja isa
df naredba - provjerit instalaciju loopfs datotecnih sistema
onda umount bi radio deaktivaciju nekog od tih modula 
svrha ubiquity da se app instalira na hard disk od live cd
prilikom instalacije na disk treba izmijenit var/lib/dpkg/status datoteku na osnovu diff datoteka za svaki modul
deactivate() pored umounta 
diff naredba pored linija razlike pise u kojim su linijama razlike
prilikom deaktivacije modula mogli bismo izbildat novu verziju var/lib/dpkg/status koja bi se napravila od svih var/lib/dpkg/status bez
datoteka koje taj modul instalirao

navodno delta komanda 
sudo rsync -aHxv --dry-run --compare-dest=./livecdtmp/edit/ ./livecdtmp/edit-java/ folder3/
sudo rsync -av folderA folderB folderC
sudo rsync -rvcm --compare-dest=/home/dejanqa/zavrsni/livecdtmp/edit-chrome/ /home/dejanqa/zavrsni/livecdtmp/edit-java/ /home/dejanqa/zavrsni/livecdtmp/deltaChromeJava/


